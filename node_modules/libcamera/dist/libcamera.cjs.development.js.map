{"version":3,"file":"libcamera.cjs.development.js","sources":["../src/libCamera.config.ts","../src/utils/execute.ts","../src/utils/index.ts","../src/libCamera.ts","../src/index.ts"],"sourcesContent":["import { Commands } from './types';\n\nexport const commonCommands: Commands = {\n  Flags: [\n    'help', // Print help information for the application\n    'version', // Print out a software version number\n    'list-cameras', // List the cameras available for use\n    'fullscreen', // Fullscreen preview mode\n    'qt-preview', // Use Qt-based preview window\n    'nopreview', // Do not display a preview window\n    'rawfull', // Force sensor to capture in full resolution mode\n    'hflip', // Read out with horizontal mirror\n    'vflip', // Read out with vertical flip\n    'flush', // Flush output files immediately\n  ],\n  Options: [\n    'lens-position', // Set lens position <number>\n    'camera', // Selects which camera to use <index>\n    'config', // Read options from the given file <filename>\n    'timeout', // Delay before application stops automatically <milliseconds>\n    'preview', // Preview window settings <x,y,w,h>\n    'info-text', // Set window title bar text <string>\n    'width', // Capture image width <width>\n    'height', // Capture image height <height>\n    'viewfinder-width', // Capture image width <width> (preview)\n    'viewfinder-height', // Capture image height <height> (preview)\n    'mode', // Specify sensor mode, given as <width>:<height>:<bit-depth>:<packing>\n    'viewfinder-mode', // Specify sensor mode, given as <width>:<height>:<bit-depth>:<packing>\n    'lores-width', // Low resolution image width <width>\n    'lores-height', // Low resolution image height <height>\n    'rotation', // Use hflip and vflip to create the given rotation <angle>\n    'roi', // Select a crop (region of interest) from the camera <x,y,w,h>\n    'sharpness', // Set image sharpness <number>\n    'contrast', // Set image contrast <number>\n    'brightness', // Set image brightness <number>\n    'saturation', // Set image colour saturation <number>\n    'ev', // Set EV compensation <number>\n    'shutter', // Set the exposure time in microseconds <number>\n    'gain', // Sets the combined analogue and digital gains <number>\n    'analoggain', // Synonym for --gain\n    'metering', // Set the metering mode <string>\n    'exposure', // Set the exposure profile <string>\n    'awb', // Set the AWB mode <string>\n    'awbgains', // Set fixed colour gains <number,number>\n    'denoise', // Set the denoising mode <string>\n    'tuning-file', //\tSpecify the camera tuning to use <string>\"\n    'output', // Output file name <string>\n    'wrap', // Wrap output file counter at <number>\n  ],\n};\n\nexport const jpegCommands: Commands = {\n  Flags: [...commonCommands.Flags],\n  Options: [...commonCommands.Options],\n};\n\nexport const stillCommands: Commands = {\n  Flags: [\n    ...commonCommands.Flags,\n    'datetime', // Use date format for the output file names\n    'timestamp', // Use system timestamps for the output file names\n    'keypress', // Capture image when Enter pressed\n    'signal', // Capture image when SIGUSR1 received\n    'raw', // Save raw file\n  ],\n  Options: [\n    ...commonCommands.Options,\n    'quality', // JPEG quality <number>\n    'exif', // Add extra EXIF tags <string>\n    'timelapse', // Time interval between timelapse captures <milliseconds>\n    'framestart', // The starting value for the frame counter <number>\n    'restart', // Set the JPEG restart interval <number>\n    'thumb', // Set thumbnail parameters <w:h:q> or none\n    'encoding', // Set the still image codec <string> (jpg, png, bmp, rgb, yuv420)\n    'latest', // Make symbolic link to latest file saved <string>\n  ],\n};\n\nexport const vidCommands: Commands = {\n  Flags: [\n    ...commonCommands.Flags,\n    'keypress', // Capture image when Enter pressed\n    'signal', // Capture image when SIGUSR1 received\n    'split', // Split multiple recordings into separate files\n    'inline', // Write sequence header in every I frame (H.264 only)\n    'listen', // Wait for an incoming TCP connection\n  ],\n  Options: [\n    ...commonCommands.Options,\n    'quality', // JPEG quality <number>\n    'bitrate', // H.264 bitrate <number>\n    'intra', // Intra-frame period (H.264 only) <number>\n    'profile', // H.264 profile <string>\n    'level', // H.264 level <string>\n    'codec', // Encoder to be used <string> h264 mjpeg yuv420\n    'initial', // Start the application in the recording or paused state <string>\n    'segment', // Write the video recording into multiple segments <number>\n    'circular', // Write the video recording into a circular buffer of the given <size>\n    'frames', // Record exactly this many frames <number>\n  ],\n};\n\nexport const rawCommands: Commands = {\n  Flags: [...commonCommands.Flags],\n  Options: [\n    ...commonCommands.Options,\n    'segment', // direct each to a separate file.\n  ],\n};\n","import {\n  ChildProcessWithoutNullStreams,\n  ExecException,\n  ExecOptions,\n} from 'child_process';\nimport { Execute } from './types';\n\nexport default function makeExecute({ exec }: { exec: any }): Execute {\n  return Object.freeze({\n    runCommand,\n    cmdCommand,\n  });\n\n  function runCommand({\n    cmdCommand,\n    options,\n  }: {\n    cmdCommand: string;\n    options?: ExecOptions;\n  }): Promise<ChildProcessWithoutNullStreams | string> {\n    try {\n      return new Promise((resolve, reject) => {\n        exec(\n          cmdCommand,\n          options,\n          (error: ExecException | null, stdout: string, stderr: string) => {\n            if (error) {\n              if (stderr) {\n                reject(stderr.trim());\n              }\n              reject(error);\n            }\n            if (stdout) {\n              resolve(stdout.trim());\n            }\n            if (stderr) {\n              resolve(stderr.trim());\n            }\n          }\n        );\n      });\n    } catch (err) {\n      console.log('Run command error = ', err);\n      throw new Error('Error in execute run command');\n    }\n  }\n\n  function cmdCommand({\n    base,\n    params,\n  }: {\n    base: string;\n    params: Array<string>;\n  }) {\n    if (!params && base) {\n      return base;\n    }\n\n    if (!Array.isArray(params)) {\n      throw new Error('params must be an Array');\n    }\n\n    return base + ' ' + params.join(' ');\n  }\n}\n","import { exec } from 'child_process';\nimport makeExecute from './execute';\n\nconst execute = makeExecute({ exec });\n\nexport { execute };\n","import { Execute } from './utils/types';\nimport { PiCameraOutput, PiCameraConfig, Commands } from './types';\n\nexport default function buildMakeLibCamera({\n  execute,\n  jpegCommands,\n  stillCommands,\n  vidCommands,\n  rawCommands,\n}: {\n  execute: Execute;\n  jpegCommands: Commands;\n  stillCommands: Commands;\n  vidCommands: Commands;\n  rawCommands: Commands;\n}) {\n  return function makeLibCamera(): PiCameraOutput {\n    return Object.freeze({\n      jpeg: ({ config }: { config: PiCameraConfig }) => {\n        config = configShouldBeAnObject({ config });\n        return makeJpeg({\n          Flags: jpegCommands.Flags,\n          Options: jpegCommands.Options,\n          execute,\n          config,\n        });\n      },\n      still: ({ config }: { config: PiCameraConfig }) => {\n        config = configShouldBeAnObject({ config });\n        return makeStill({\n          Flags: stillCommands.Flags,\n          Options: stillCommands.Options,\n          execute,\n          config,\n        });\n      },\n      vid: ({ config }: { config: PiCameraConfig }) => {\n        config = configShouldBeAnObject({ config });\n        return makeVid({\n          Flags: vidCommands.Flags,\n          Options: vidCommands.Options,\n          execute,\n          config,\n        });\n      },\n      raw: ({ config }: { config: PiCameraConfig }) => {\n        config = configShouldBeAnObject({ config });\n        return makeRaw({\n          Flags: rawCommands.Flags,\n          Options: rawCommands.Options,\n          execute,\n          config,\n        });\n      },\n    });\n  };\n}\n\nfunction runCommand({\n  execute,\n  cmdCommand,\n}: {\n  execute: Execute;\n  cmdCommand: string;\n}) {\n  try {\n    return execute.runCommand({ cmdCommand }).catch((err: unknown) => {\n      if (err instanceof Error) {\n        throw new Error(`Things exploded (${err.message})`);\n      } else if (typeof err === 'string') {\n        throw new Error(err);\n      } else {\n        throw new Error('Unknown error in run command');\n      }\n    });\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new Error(`Things exploded (${err.message})`);\n    } else {\n      throw new Error('Unknown error');\n    }\n  }\n}\n\nfunction makeJpeg({\n  Flags,\n  Options,\n  execute,\n  config,\n}: {\n  Flags: Commands['Flags'];\n  Options: Commands['Options'];\n  execute: Execute;\n  config: PiCameraConfig;\n}) {\n  const cmdCommand = createTakePictureCommand({\n    baseType: 'libcamera-jpeg',\n    Flags,\n    Options,\n    execute,\n    config,\n  });\n\n  if (process.env.NODE_ENV === 'test') {\n    console.log('cmdCommand = ', cmdCommand);\n    return cmdCommand;\n  }\n  return runCommand({ execute, cmdCommand });\n}\n\nfunction makeStill({\n  Flags,\n  Options,\n  execute,\n  config,\n}: {\n  Flags: Commands['Flags'];\n  Options: Commands['Options'];\n  execute: Execute;\n  config: PiCameraConfig;\n}) {\n  try {\n    const cmdCommand = createTakePictureCommand({\n      baseType: 'libcamera-still',\n      Flags,\n      Options,\n      execute,\n      config,\n    });\n\n    if (process.env.NODE_ENV === 'test') {\n      console.log('cmdCommand = ', cmdCommand);\n      return cmdCommand;\n    }\n    return runCommand({ execute, cmdCommand });\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new Error(`Things exploded (${err.message})`);\n    } else {\n      throw new Error('Unknown error');\n    }\n  }\n}\n\nfunction makeVid({\n  Flags,\n  Options,\n  execute,\n  config,\n}: {\n  Flags: Commands['Flags'];\n  Options: Commands['Options'];\n  execute: Execute;\n  config: PiCameraConfig;\n}) {\n  try {\n    const cmdCommand = createTakePictureCommand({\n      baseType: 'libcamera-vid',\n      Flags,\n      Options,\n      execute,\n      config,\n    });\n\n    if (process.env.NODE_ENV === 'test') {\n      console.log('cmdCommand = ', cmdCommand);\n      return cmdCommand;\n    }\n    return runCommand({ execute, cmdCommand });\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new Error(`Things exploded (${err.message})`);\n    } else {\n      throw new Error('Unknown error in tale Picture');\n    }\n  }\n}\n\nfunction makeRaw({\n  Flags,\n  Options,\n  execute,\n  config,\n}: {\n  Flags: Commands['Flags'];\n  Options: Commands['Options'];\n  execute: Execute;\n  config: PiCameraConfig;\n}) {\n  try {\n    const cmdCommand = createTakePictureCommand({\n      baseType: 'libcamera-raw',\n      Flags,\n      Options,\n      execute,\n      config,\n    });\n\n    if (process.env.NODE_ENV === 'test') {\n      console.log('cmdCommand = ', cmdCommand);\n      return cmdCommand;\n    }\n    return runCommand({ execute, cmdCommand });\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new Error(`Things exploded (${err.message})`);\n    } else {\n      throw new Error('Unknown error in tale Picture');\n    }\n  }\n}\n\nfunction createTakePictureCommand({\n  baseType,\n  Flags,\n  Options,\n  execute,\n  config,\n}: {\n  baseType:\n    | 'libcamera-jpeg'\n    | 'libcamera-still'\n    | 'libcamera-vid'\n    | 'libcamera-raw';\n  Flags: Commands['Flags'];\n  Options: Commands['Options'];\n  execute: Execute;\n  config: PiCameraConfig;\n}) {\n  const cmdCommand = execute.cmdCommand({\n    base: baseType,\n    params: prepareConfigOptsAndFlags(config, { Flags, Options }),\n  });\n\n  return cmdCommand;\n}\n\nfunction configShouldBeAnObject({ config }: { config: any }) {\n  if (config) {\n    return config;\n  } else {\n    return {};\n  }\n}\n\nfunction prepareConfigOptsAndFlags(\n  config: any,\n  { Flags, Options }: { Flags: Commands['Flags']; Options: Commands['Options'] }\n): Array<string> {\n  const configArray: any = [];\n  Object.keys(config).forEach(key => {\n    // Only include flags if they're set to true\n    if (Flags.includes(key) && config[key]) {\n      configArray.push(`--${key}`);\n    } else if (Options.includes(key)) {\n      configArray.push(`--${key}`, config[key]);\n    }\n  });\n\n  return configArray;\n}\n","import {\n  jpegCommands,\n  stillCommands,\n  vidCommands,\n  rawCommands,\n} from './libCamera.config';\nimport { execute } from './utils';\n\nimport buildMakeLibCamera from './libCamera';\nconst makeLibCamera = buildMakeLibCamera({\n  execute,\n  jpegCommands,\n  stillCommands,\n  vidCommands,\n  rawCommands,\n});\n\nexport const libcamera = makeLibCamera();\nexport default libcamera;\n"],"names":["commonCommands","Flags","Options","jpegCommands","stillCommands","vidCommands","rawCommands","makeExecute","exec","Object","freeze","runCommand","cmdCommand","options","Promise","resolve","reject","error","stdout","stderr","trim","err","console","log","Error","base","params","Array","isArray","join","execute","buildMakeLibCamera","makeLibCamera","jpeg","config","configShouldBeAnObject","makeJpeg","still","makeStill","vid","makeVid","raw","makeRaw","message","createTakePictureCommand","baseType","process","prepareConfigOptsAndFlags","configArray","keys","forEach","key","includes","push","libcamera"],"mappings":"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"}